{"version":3,"sources":["NameSet/NameSet.js","Message/Message.js","App.js","reportWebVitals.js","index.js"],"names":["NameSet","props","history","useHistory","className","type","id","placeholder","onKeyPress","event","key","giveName","document","getElementById","value","push","onClick","socket","socketio","Message","state","name","curtext","chat","prevData","onTextChange","setState","onMessageSubmit","e","preventDefault","alert","emit","addChat","data","console","log","split","newName","newMessage","chat2","renderChat","map","message","index","on","this","startSocket","onSubmit","autocomplete","href","Component","App","applyname","iname","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.73e13d45.chunk.js","sourcesContent":["import \"./Name.css\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction NameSet(props) {\r\n    const history = useHistory();\r\n\r\n    const sendName = () => {\r\n        props.giveName(document.getElementById(\"setnameforminput\").value);\r\n        history.push(\"/message\");\r\n    }\r\n\r\n    const handleKeyPress = (event) => {\r\n        if(event.key === 'Enter'){\r\n            props.giveName(document.getElementById(\"setnameforminput\").value);\r\n            history.push(\"/message\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"NameSet\">\r\n            <div className=\"setnameform\" >\r\n                <input type=\"text\" id=\"setnameforminput\" className=\"setnameform-input\" placeholder=\"Username.\" onKeyPress={handleKeyPress}/>\r\n                <button className=\"setnameform-button\" onClick={sendName}>Submit</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NameSet;","import \"./Message.css\";\r\nimport React, { useState, useEffect, setState, Component } from \"react\";\r\nimport socketio from 'socket.io-client';\r\nconst socket = socketio(\"https://www.gruzservices.com\");\r\n\r\nclass Message extends Component {\r\n    state = {\r\n        name: this.props.name,\r\n        curtext: \"\",\r\n        chat: [],\r\n        prevData: \"\"\r\n    }\r\n\r\n    onTextChange = () => {\r\n        this.setState({curtext: document.getElementById(\"sendmessinput\").value});\r\n    }\r\n\r\n    onMessageSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.name == \"\") {\r\n            alert(\"You don't have a name. Go back home to get a name.\");\r\n        } else {\r\n            socket.emit(\"message\", `${this.state.name},${document.getElementById(\"sendmessinput\").value}`);\r\n        }\r\n    }\r\n\r\n    addChat = (data) => {\r\n        console.log(\"1\");\r\n        const [newName, newMessage] = data.split(\",\");\r\n        let chat2 = this.state.chat;\r\n        chat2.push(`${newName}:${newMessage}`);\r\n        this.setState({chat: chat2});\r\n    }\r\n\r\n    renderChat = () => {\r\n        return this.state.chat.map((message, index) => (\r\n            <div className=\"chatbox\" key={index}>\r\n                <h3>{message.split(\":\")[0]}:</h3><h4>{message.split(\":\")[1]}</h4>\r\n            </div>\r\n        ));\r\n    }\r\n\r\n    startSocket() {\r\n        socket.on(\"message\", (data) => {\r\n            if (data!==this.state.prevData){\r\n                this.addChat(data);\r\n                this.setState({prevData: data});\r\n            }\r\n        });        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Message\">\r\n                <div className=\"chat-part\">\r\n                    {this.startSocket()}\r\n                    <div className=\"h1part\"><h1>Chat Room</h1></div>\r\n                    {this.renderChat()}\r\n                </div>\r\n                <form className=\"submitPart\" onSubmit={this.onMessageSubmit}>\r\n                    <input autocomplete=\"off\" type=\"text\" id=\"sendmessinput\" name=\"message\" placeholder=\"Message:\"/>\r\n                    <input  type=\"submit\" value=\"Send\"/>\r\n                </form>\r\n                <div className=\"goHome\">\r\n                    <a href=\"/\">Go Home</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Message;","import './App.css';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport React, { Component } from 'react';\nimport NameSet from './NameSet/NameSet';\nimport Message from './Message/Message';\n\nclass App extends Component {\n  state = {\n    name: \"\"\n  }\n\n  applyname = (iname) => {\n    this.setState({name: iname});\n  }\n\n  render() {\n    return (\n      <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <NameSet giveName={this.applyname}/>\n          </Route>\n          <Route path=\"/message\">\n            <Message name={this.state.name}/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}