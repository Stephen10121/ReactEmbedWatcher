{"version":3,"sources":["NameSet/NameSet.js","Message/Message.js","App.js","reportWebVitals.js","index.js"],"names":["NameSet","props","history","useHistory","className","type","id","placeholder","onKeyPress","event","key","giveName","document","getElementById","value","push","onClick","socket","socketio","Message","useState","name","curtext","changeCurtext","chat","changeChat","prevData","changePrevData","checkIncomingData","on","data","split","newName","newMessage","chat2","addChat","objDiv","scrollTop","scrollHeight","onStartup","useRef","current","useEffect","map","message","index","onSubmit","e","preventDefault","emit","autocomplete","onChange","href","App","changeName","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.33c58c5b.chunk.js","sourcesContent":["import \"./Name.css\";\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction NameSet(props) {\r\n    const history = useHistory();\r\n\r\n    const sendName = () => {\r\n        props.giveName(document.getElementById(\"setnameforminput\").value);\r\n        history.push(\"/message\");\r\n    }\r\n\r\n    const handleKeyPress = (event) => {\r\n        if(event.key === 'Enter'){\r\n            props.giveName(document.getElementById(\"setnameforminput\").value);\r\n            history.push(\"/message\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"NameSet\">\r\n            <div className=\"setnameform\" >\r\n                <input type=\"text\" id=\"setnameforminput\" className=\"setnameform-input\" placeholder=\"Username.\" onKeyPress={handleKeyPress}/>\r\n                <button className=\"setnameform-button\" onClick={sendName}>Submit</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NameSet;","import \"./Message.css\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport socketio from 'socket.io-client';\r\nconst socket = socketio(\"https://www.gruzservices.com\");\r\n\r\nconst Message = (props) => {\r\n    const [name] = useState(props.name);\r\n    const [curtext, changeCurtext] = useState(\"\");\r\n    const [chat, changeChat] = useState([]);\r\n    const [prevData, changePrevData] = useState(\"\");\r\n    const [history] = useState(useHistory());\r\n\r\n    const onTextChange = () => changeCurtext(document.getElementById(\"sendmessinput\").value);\r\n\r\n    const onMessageSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (name === \"\") {\r\n            history.push(\"/\");\r\n        } else {\r\n            socket.emit(\"message\", `${name},${curtext}`);\r\n            document.getElementById(\"sendmessinput\").value = \"\";\r\n        }\r\n    }\r\n\r\n    const addChat = (data) => {\r\n        const [newName, newMessage] = data.split(\",\");\r\n        let chat2 = chat;\r\n        chat2.push(`${newName}:${newMessage}`);\r\n        changeChat(chat2);\r\n    }\r\n\r\n    const renderChat = () => {\r\n        return chat.map((message, index) => (\r\n            <div className=\"chatbox\" key={index}>\r\n                <h3>{message.split(\":\")[0]}:</h3><h4>{message.split(\":\")[1]}</h4>\r\n            </div>\r\n        ));\r\n    }\r\n\r\n    const checkIncomingData = () => {\r\n        socket.on(\"message\", (data) => {\r\n            if (data !== prevData){\r\n                addChat(data);\r\n                changePrevData(data);\r\n                var objDiv = document.getElementById(\"chat-part\");\r\n                objDiv.scrollTop = objDiv.scrollHeight;\r\n            }\r\n        });\r\n    }\r\n\r\n    const onStartup = useRef(() => {});\r\n    onStartup.current = () => {\r\n        checkIncomingData();\r\n    }\r\n\r\n    useEffect(() => {\r\n        onStartup.current();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"Message\">\r\n            <div className=\"chat-part\" id=\"chat-part\">\r\n                <div className=\"h1part\"><h1>Chat Room</h1></div>\r\n                {renderChat()}\r\n            </div>\r\n            <form className=\"submitPart\" onSubmit={onMessageSubmit}>\r\n                <input autocomplete=\"off\" type=\"text\" id=\"sendmessinput\" onChange={onTextChange} name=\"message\" placeholder=\"Message:\"/>\r\n                <input  type=\"submit\" value=\"Send\"/>\r\n            </form>\r\n            <div className=\"goHome\">\r\n                <a href=\"/\">Go Home</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport NameSet from './NameSet/NameSet';\nimport Message from './Message/Message';\nimport './App.css';\n\nconst App = () => {\n  let [name, changeName] = useState(\"\");\n\n  return(\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <NameSet giveName={changeName}/>\n          </Route>\n          <Route path=\"/message\">\n            <Message name={name}/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}