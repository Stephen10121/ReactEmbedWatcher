{"version":3,"sources":["NameSet/NameSet.js","Message/Message.js","App.js","reportWebVitals.js","index.js"],"names":["NameSet","useState","name","setName","history","useHistory","sendName","localStorage","setItem","push","className","type","id","placeholder","onKeyPress","event","key","onChange","e","target","value","onClick","socket","socketio","Message","changeName","curtext","changeCurtext","chat","changeChat","prevData","changePrevData","checkIncomingData","on","data","newName","mName","newMessage","mText","chat2","cachedName","cachedMessage","addChat","objDiv","document","getElementById","scrollTop","scrollHeight","onStartup","useRef","current","getItem","useEffect","map","message","index","onSubmit","preventDefault","emit","autoComplete","href","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ac483e38.chunk.js","sourcesContent":["import \"./Name.css\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport React, { useState } from \"react\";\r\n\r\nconst NameSet = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const sendName = () => {\r\n        localStorage.setItem(\"name\", name);\r\n        history.push(\"/message\");\r\n    }\r\n\r\n    const handleKeyPress = (event) => {\r\n        if(event.key === 'Enter'){\r\n            sendName();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"NameSet\">\r\n            <div className=\"setnameform\" >\r\n                <input type=\"text\" id=\"setnameforminput\" className=\"setnameform-input\" placeholder=\"Username.\" onKeyPress={handleKeyPress} onChange={(e) => setName(e.target.value)}/>\r\n                <button className=\"setnameform-button\" onClick={sendName}>Submit</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NameSet;","import \"./Message.css\";\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport socketio from 'socket.io-client';\r\nconst socket = socketio(\"https://www.gruzservices.com\");\r\n//const socket = socketio(\"http://192.168.0.24\");\r\n\r\nconst Message = () => {\r\n    const [name, changeName] = useState(\"\");\r\n    const [curtext, changeCurtext] = useState(\"\");\r\n    const [chat, changeChat] = useState([]);\r\n    const [prevData, changePrevData] = useState(\"\");\r\n    const [history] = useState(useHistory());\r\n\r\n    const onMessageSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (name === \"\") {\r\n            history.push(\"/\");\r\n        } else {\r\n            socket.emit(\"message\", {mName: name, mText: curtext});\r\n            document.getElementById(\"sendmessinput\").value = \"\";\r\n        }\r\n    }\r\n\r\n    const addChat = (data) => {\r\n        const newName = data.mName;\r\n        const newMessage = data.mText;\r\n        let chat2 = chat;\r\n        chat2.push({cachedName: newName, cachedMessage: newMessage});\r\n        changeChat(chat2);\r\n    }\r\n\r\n    const renderChat = () => {\r\n        return chat.map((message, index) => (\r\n            <div className=\"chatbox\" key={index}>\r\n                <p>{message.cachedName}</p><h4>{message.cachedMessage}</h4>\r\n            </div>\r\n        ));\r\n    }\r\n\r\n    const checkIncomingData = () => {\r\n        socket.on(\"message\", (data) => {\r\n            if (data !== prevData){\r\n                addChat(data);\r\n                changePrevData(data);\r\n                var objDiv = document.getElementById(\"chat-part\");\r\n                objDiv.scrollTop = objDiv.scrollHeight;\r\n            }\r\n        });\r\n    }\r\n\r\n    const localGet = () => {\r\n        if (localStorage.getItem(\"name\") !== \"\") {\r\n            changeName(localStorage.getItem(\"name\"));\r\n        } else {\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    const onStartup = useRef(() => {});\r\n    onStartup.current = () => {\r\n        checkIncomingData();\r\n        localGet();\r\n    }\r\n\r\n    useEffect(() => {\r\n        onStartup.current();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"Message\">\r\n            <div className=\"chat-part\" id=\"chat-part\">\r\n                <div className=\"h1part\"><h1>Chat Room</h1></div>\r\n                {renderChat()}\r\n            </div>\r\n            <form className=\"submitPart\" onSubmit={onMessageSubmit}>\r\n                <input autoComplete=\"off\" type=\"text\" id=\"sendmessinput\" onChange={(e)=>changeCurtext(e.target.value)} name=\"message\" placeholder=\"Message:\"/>\r\n                <input  type=\"submit\" value=\"Send\"/>\r\n            </form>\r\n            <div className=\"goHome\">\r\n                <a href=\"/\">Change Name</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport NameSet from './NameSet/NameSet';\nimport Message from './Message/Message';\nimport './App.css';\n\nconst App = () => {\n\n  return(\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <NameSet />\n          </Route>\n          <Route path=\"/message\">\n            <Message />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}